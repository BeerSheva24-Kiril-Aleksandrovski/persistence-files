package telran.persistence;

public class CodeCommentsSeparation {
    public static void main(String[] args) { 

        System.out.println(args[1]);        // Test comment to chech the code

        //TODO - data from args[0] split to two files: args[1], args[2]

        /** 
        * args[0] - path to file containing code and comments 
        * args[1] - path to file for placing only code
        * args[2] - path to file for placing only comments 
        */

        /*  args[0] - path to file containing code and comments 
            args[1] - path to file for placing only code
            args[2] - path to file for placing only comments */


    }
    @Test
    void isOneSwapTest() {
        assertTrue(isOneSwap(new int[] { 1, 5, 3, 4, 2, 5 }));          // need to swap 5 and 2 => number of swaps = 1
        assertFalse(isOneSwap(new int[] { 1, 2, 3, 4, 5, 6, 1, 4 }));   // number of swaps > 1
        assertTrue(isOneSwap(new int[] { 1, 6, 3, 4, 5, 2, 6 }));       // need to swap 6 and 2 => number of swaps = 1
        assertTrue(isOneSwap(new int[] { 7, 2, 3, 3, 3, 4, 5, 6, 1 })); // need to swap 7 and 1 => number of swaps = 1
        assertFalse(isOneSwap(new int[] { 1, 2, 3, 4, 5, 6 }));         // no need to swap
        assertTrue(isOneSwap(new int[] { 1, 2, 4, 3, 5, 6 }));          // swap 4 and 3 => number of swaps = 1
        assertFalse(isOneSwap(new int[] { 1, 2, 3, 5, 6, 4 }));         // numer of swops = 2
        assertFalse(isOneSwap(new int[] { 1, 2, 3, 4, 5, 6, 1 }));
        System.out.println("//");
    }

}
    